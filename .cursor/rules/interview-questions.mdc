---
description:
globs:
alwaysApply: false
---
# 面试题指导

这个项目主要收集和整理前端面试中的高频问题，参考 [README.md](mdc:README.md) 中的详细内容。

## 面试题分类

### 技术栈分类
- **JavaScript**: 基础语法、ES6+、异步编程、原型链等
- **TypeScript**: 类型系统、泛型、装饰器等
- **React**: 组件、Hooks、状态管理、性能优化等
- **Vue**: 响应式原理、组件通信、指令等
- **CSS**: 布局、动画、预处理器等

### 知识领域分类
- **浏览器原理**: 渲染过程、事件循环、缓存机制等
- **性能优化**: 加载优化、运行时优化、监控等
- **网络协议**: HTTP/HTTPS、TCP/IP、WebSocket等
- **算法与数据结构**: 排序、搜索、树、图等
- **工程化工具**: Webpack、Vite、Babel、ESLint等

## 添加新面试题

### 1. 题目格式

```markdown
### 问题标题

**问题描述**: 详细描述面试题的内容

**考查重点**:
- 考查点1
- 考查点2
- 考查点3

**参考答案**:
详细的解答内容，包括：
- 核心概念解释
- 实现原理
- 代码示例
- 注意事项

**相关知识点**:
- 相关概念1
- 相关概念2

**难度等级**: 初级/中级/高级
```

### 2. 代码实现题

对于需要代码实现的面试题：

1. **在对应的 JS 文件中实现**:
   - React 相关: [src/react-interview.js](mdc:src/react-interview.js)
   - 工具函数: [src/lodash.js](mdc:src/lodash.js) 或 [src/ramda.js](mdc:src/ramda.js)

2. **添加测试用例**:
   - 在 [__tests__](mdc:__tests__) 目录下对应的测试文件中添加

3. **更新文档**:
   - 在 [README.md](mdc:README.md) 中添加详细说明

### 3. 质量标准

- **准确性**: 答案必须技术正确，避免误导
- **完整性**: 覆盖问题的各个方面，不遗漏重要信息
- **实用性**: 提供实际工作中可用的解决方案
- **可读性**: 使用清晰的语言和格式，便于理解

## 面试题来源

- 实际面试经历
- 知名公司面试题
- 开源项目中的经典问题
- 技术社区讨论的热点问题

## 维护建议

1. **定期更新**: 跟进技术发展，更新过时的内容
2. **社区反馈**: 收集使用者的反馈，改进答案质量
3. **分类整理**: 保持良好的分类和索引结构
4. **代码测试**: 确保所有代码示例都经过测试验证
